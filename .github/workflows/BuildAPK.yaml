name: Build & Publish Release APK

on:
  push:
    tags:
      - '*'

jobs:
  build-apk:
    name: Build APK

    # run on a new ubuntu VM
    runs-on: ubuntu-latest

    env:
      KEYSTORE_RELEASE_PASSWORD: ${{ secrets.KEYSTORE_RELEASE_PASSWORD }}

    # need these permissions to modify the PR
    permissions:
      contents: write
      pull-requests: write

    defaults:
      run:
        working-directory: ./${{ env.base_folder }}

    steps:
      # First step : Checkout the repository on the runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of Sonar analysis (if we use Sonar Later)

      # Setup JDK 17 (necessary for gradle)
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      # Caching is a very useful part of a CI, as a workflow is executed in a clean environement every time,
      # this means that one would need to re-download and re-process gradle files for every run. Which is very time consuming.
      #
      # To avoid that, we cache the the gradle folder to reuse it later.
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Load secrets
      - name: Loading secrets.properties
        run: |
          echo MAPS_API_KEY=${{ secrets.MAPS_API_KEY }} >> ./secrets.properties 
          echo SPOTIFY_CLIENT_ID=${{ secrets.SPOTIFY_CLIENT_ID }} >> ./secrets.properties 
          mkdir ~/.android
          echo "${{ secrets.KEYSTORE_DEBUG_B64 }}" | base64 -d > ~/.android/debug.keystore
          echo "${{ secrets.KEYSTORE_RELEASE_B64 }}" | base64 -d > ./release.keystore

      # Make the gradlew script executable
      - name: Grant execute permission for gradlew
        run: |
          chmod +x ./gradlew

      # This step runs gradle commands to build the application
      - name: Assemble Release
        run: |
          # To run the CI with debug information, add --info
          ./gradlew assembleRelease lint --parallel --build-cache
      - name: List output files
        run: ls -l app/build/outputs/apk/release/

      - name: Releasing using GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "app/build/outputs/apk/release/app-release.apk"
